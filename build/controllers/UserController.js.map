{"version":3,"sources":["../../server/controllers/UserController.js"],"names":["util","Util","server_err","UserController","req","res","body","username","password","setError","send","user","UserService","logIn","err","is_oper","db_user","message","setSuccess","console","log","decoded","logOut","token","new_user","signUp","id","params","Number","getUser"],"mappings":"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","sourcesContent":["import UserService from '../services/UserService';\nimport Util from '../utils/Utils';\n\nconst util = new Util();\nconst server_err = \"Server Error\"\n\nclass UserController {\n  static async logIn(req, res) {\n    if (!req.body.username || !req.body.password) {\n      util.setError(400, 'Please provide complete details to login!');\n      return util.send(res);\n    }\n    let user = req.body\n    try {\n      await UserService.logIn(user, function(err, is_oper, db_user) {\n        if (err) {\n          if (is_oper) {\n            util.setError(400, err.message)\n          } else {\n            util.setError(500, server_err)\n          }\n        } else {\n          util.setSuccess(200, 'Successfully logged in!', db_user);\n        }\n      })\n    } catch (error) {\n      util.setError(500, server_err);\n    }\n    return util.send(res)\n  }\n\n  static async logOut(req, res) {\n    try {\n      console.log(req.decoded)\n      await UserService.logOut(req.token, req.decoded.username, function(err, is_oper) {\n        if (err) {\n          if (is_oper) {\n            util.setError(400, err.message)\n          } else {\n            util.setError(500, server_err)\n          }\n        } else {\n          util.setSuccess(200, \"Successfully logged out!\")\n        }\n      })\n    } catch (error) {\n      console.log(error)\n      util.setError(500, server_err);\n    }\n    return util.send(res)\n  }\n\n  static async signUp(req, res) {\n    if (!req.body.username || !req.body.password) {\n      util.setError(400, 'Please provide complete details');\n      return util.send(res);\n    }\n    let new_user = req.body;\n    try {\n      await UserService.signUp(new_user, function (err, is_oper, db_user) {\n        if (err) {\n          if (is_oper) {\n            util.setError(400, err.message)\n          } else {\n            util.setError(500, server_err)\n          }\n        } else {\n          util.setSuccess(201, 'User Created!', db_user);\n        }\n      });\n    } catch (error) {\n      console.log(error)\n      util.setError(500, server_err);\n    }\n    return util.send(res);\n  }\n\n  static async getUser(req, res) {\n    const { id } = req.params;\n\n    console.log(\"getUser\")\n\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n\n    try {\n      const user = await UserService.getUser(id);\n\n      if (!user) {\n        util.setError(404, `Cannot find user with the id ${id}`);\n      } else {\n        util.setSuccess(200, 'Found user', user);\n      }\n    } catch (error) {\n      util.setError(500, server_err);\n    }\n    return util.send(res);\n  }\n}\n\nexport default UserController;"],"file":"UserController.js"}