{"version":3,"sources":["../../server/test/user.js"],"names":["chai","use","chatHttp","expect","user","username","password","token","before","done","request","app","post","set","send","end","err","res","status","to","equal","body","data","include","user_id","have","keys","describe","it"],"mappings":"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","sourcesContent":["import chai from 'chai';\nimport chatHttp from 'chai-http';\nimport 'chai/register-should';\nimport app from '../../app';\n\n\nchai.use(chatHttp);\nconst { expect } = chai;\n\nconst user = {\n    username: 'antoha',\n    password: 'my_pass'\n}\n\nlet token = null\nbefore(function(done){\n    chai.request(app)\n        .post('/api/user/signup')\n        .set('Accept', 'application/json')\n        .send(user)\n        .end((err, res) => {\n            expect(res.status).to.equal(201);\n            expect(res.body.data).to.include({\n                user_id: 1,\n                username: user.username\n            });\n            expect(res.body.data).to.have.keys('token', 'user_id', 'username')\n            token = res.body.data.token;\n            done();\n        });\n});\n\ndescribe('Testing the user endpoints:', () => {\n    it('It should not signup a user without enough data', (done) => {\n        const user = {\n            password: 'my_pass'\n        };\n        // console.log(token)\n        chai.request(app)\n            .post('/api/user/signup')\n            .set('Accept', 'application/json')\n            .send(user)\n            .end((err, res) => {\n                expect(res.status).to.equal(400);\n                done();\n            });\n    });\n    \n    it('It should logout', function(done){\n        // console.log(token)\n        chai.request(app)\n            .post('/api/user/logout')\n            .set('Authorization', `Bearer ${token}`)\n            .send()\n            .end((err, res) => {\n                expect(res.status).to.equal(200);\n                done();\n            })\n    });\n\n    it('It should not logout with blacklisted token', function(done){\n        // console.log(token)\n        chai.request(app)\n            .post('/api/user/logout')\n            .set('Authorization', `Bearer ${token}`)\n            .send()\n            .end((err, res) => {\n                expect(res.status).to.equal(400);\n                done();\n            })\n    });\n  \n    it('It should login', function(done){\n        // console.log(token)\n        chai.request(app)\n            .post('/api/user/login')\n            .send(user)\n            .end((err, res) => {\n                expect(res.status).to.equal(200);\n                expect(res.body.data).to.have.keys('token', 'username')\n                token = res.body.data.token;\n                done();\n            })\n    });\n  });"],"file":"user.js"}