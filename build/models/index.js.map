{"version":3,"sources":["../../server/models/index.js"],"names":["fs","require","path","Sequelize","basename","module","filename","env","process","NODE_ENV","config","db","sequelize","use_env_variable","database","username","password","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate","exports"],"mappings":";;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMG,QAAQ,GAAGF,IAAI,CAACE,QAAL,CAAcC,MAAM,CAACC,QAArB,CAAjB;AACA,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AACA,IAAMC,MAAM,GAAGT,OAAO,uBAAP,CAA+BM,GAA/B,CAAf;;AACA,IAAMI,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIF,MAAM,CAACG,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CAAcK,OAAO,CAACD,GAAR,CAAYG,MAAM,CAACG,gBAAnB,CAAd,CAAZ;AACD,CAFD,MAEO;AACLD,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CACVO,MAAM,CAACI,QADG,EACOJ,MAAM,CAACK,QADd,EACwBL,MAAM,CAACM,QAD/B,EACyCN,MADzC,CAAZ;AAGD;;AAEDV,EAAE,CACCiB,WADH,CACeC,SADf,EAEGC,MAFH,CAEU,UAAAC,IAAI;AAAA,SACTA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IACCD,IAAI,KAAKhB,QADV,IAECgB,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAHV;AAAA,CAFd,EAMGC,OANH,CAMW,UAAAH,IAAI,EAAI;AACf,MAAMI,KAAK,GAAGZ,SAAS,UAAT,CAAiBV,IAAI,CAACuB,IAAL,CAAUP,SAAV,EAAqBE,IAArB,CAAjB,CAAd;AACAT,EAAAA,EAAE,CAACa,KAAK,CAACE,IAAP,CAAF,GAAiBF,KAAjB;AACD,CATH;AAWAG,MAAM,CAACC,IAAP,CAAYjB,EAAZ,EAAgBY,OAAhB,CAAwB,UAAAM,SAAS,EAAI;AACnC,MAAIlB,EAAE,CAACkB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BnB,IAAAA,EAAE,CAACkB,SAAD,CAAF,CAAcC,SAAd,CAAwBnB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACR,SAAH,GAAeA,SAAf;AAEAE,MAAM,CAAC0B,OAAP,GAAiBpB,EAAjB","sourcesContent":["const fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nconst basename = path.basename(module.filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require(`../config/config.js`)[env];\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable]);\n} else {\n  sequelize = new Sequelize(\n    config.database, config.username, config.password, config\n  );\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file =>\n    (file.indexOf('.') !== 0) &&\n    (file !== basename) &&\n    (file.slice(-3) === '.js'))\n  .forEach(file => {\n    const model = sequelize.import(path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;"],"file":"index.js"}